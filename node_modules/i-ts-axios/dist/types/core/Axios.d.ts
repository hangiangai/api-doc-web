import { AxiosPromise, AxiosRequestConfig, AxiosResponse, Method } from '../types';
import { InterceptorManagers } from './Interceptor';
interface Interceptor {
    request: InterceptorManagers<AxiosRequestConfig>;
    response: InterceptorManagers<AxiosResponse>;
}
export default class Axios {
    interceptors: Interceptor;
    constructor();
    request(url: any, config?: any): AxiosPromise;
    get(url: string, config?: AxiosRequestConfig): AxiosPromise;
    delete(url: string, config?: AxiosRequestConfig): AxiosPromise;
    post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise;
    put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise;
    patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise;
    _requestMethodWithoutData(method: Method, url: string, config?: AxiosRequestConfig): AxiosPromise;
    _requestMethodWithData(method: Method, url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise;
}
export {};
