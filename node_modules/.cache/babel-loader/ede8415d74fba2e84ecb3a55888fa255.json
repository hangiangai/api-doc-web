{"remainingRequest":"/home/hangiangai/Desktop/vue.3.0/api-doc/node_modules/thread-loader/dist/cjs.js!/home/hangiangai/Desktop/vue.3.0/api-doc/node_modules/babel-loader/lib/index.js!/home/hangiangai/Desktop/vue.3.0/api-doc/src/libs/axios/ts-axios.es5.js","dependencies":[{"path":"/home/hangiangai/Desktop/vue.3.0/api-doc/src/libs/axios/ts-axios.es5.js","mtime":1600325344692},{"path":"/home/hangiangai/Desktop/vue.3.0/api-doc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hangiangai/Desktop/vue.3.0/api-doc/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hangiangai/Desktop/vue.3.0/api-doc/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../../ts-axios/src/helpers/util.ts","../../../../../ts-axios/src/helpers/url.ts","../../../../../ts-axios/src/helpers/data.ts","../../../../../ts-axios/src/helpers/headers.ts","../../../../../ts-axios/src/helpers/error.ts","../../../../../ts-axios/src/core/xhr.ts","../../../../../ts-axios/src/core/disptchRequest.ts","../../../../../ts-axios/src/core/Interceptor.ts","../../../../../ts-axios/src/core/Axios.ts","../../../../../ts-axios/src/axios.ts"],"names":[],"mappings":"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","sourcesContent":["\nconst toString = Object.prototype.toString\n\nexport function isDate(val: any): val is Date {\n    return toString.call(val) == '[object Date]';\n}\n\nexport function isObject(val: any): val is Object {\n    return val != null && typeof val === 'object';\n}\n\nexport function isPlainObject(val: any): val is Object {\n    return toString.call(val) === '[object Object]';\n}\n\nexport function extend<T, U>(to: T, from: U): T & U {\n    for (const key in from) {\n        (to as T & U)[key] = from[key] as any\n    }\n    return to as T & U;\n}\n","import { isDate, isPlainObject } from './util';\n\nfunction encode(val: string): string {\n    return encodeURIComponent(val)\n        .replace('/%40/g', '@')\n        .replace('/%3A/ig', ':')\n        .replace('/%24/g', '$')\n        .replace('/%2C/ig', ',')\n        .replace('/%20/g', '+')\n        .replace('/%5B/g', '[')\n        .replace('/%5D/g', ']')\n}\n\nexport function buildURL(url: string, params?: any): string {\n    if (!params) return url;\n    const parts: string[] = [];\n    Object.keys(params).forEach((key) => {\n        const val = params[key];\n        if (val === null || typeof val === 'undefined') return;\n        let values = [];\n        if (Array.isArray(val)) {\n            values = val;\n            key += '[]';\n        } else {\n            values = [val];\n        }\n        values.forEach((val) => {\n            if (isDate(val)) {\n                val = val.toISOString();\n            } else if (isPlainObject(val)) {\n                val = JSON.stringify(val);\n            }\n            parts.push(`${encode(key)}=${encode(val)}`);\n        })\n    })\n    let serializedParams = parts.join('&');\n    if (serializedParams) {\n        const markIndex = url.indexOf('#');\n        if (markIndex !== -1) {\n            url = url.slice(0, markIndex);\n        }\n        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n    }\n    return url;\n}","\nimport { isPlainObject } from './util';\n\nexport function transfromRequest(data: any): any {\n    if (isPlainObject(data)) return JSON.stringify(data);\n    return data;\n}\n\nexport function transfromResponse(data: any): any {\n    if (typeof data === 'string') {\n        try {\n            data = JSON.parse(data);\n        } catch (e) {\n            // do nothing\n        }\n    }\n    return data;\n}","import { isPlainObject } from './util';\n\nfunction normalizeHeaderName(headers: any, normalizedName: string): void {\n    if (!headers) return;\n    Object.keys(headers).forEach((name) => {\n        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n            headers[normalizedName] = headers[name];\n            delete headers[name];\n        }\n    });\n}\n\nexport function processHeaders(headers: any, data: any): any {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (isPlainObject(data)) {\n        if (headers && !headers['Content-Type']) {\n            headers['Content-Type'] = 'application/json;charset=utf-8';\n        }\n    }\n    return headers;\n}\n\nexport function parseHeaders(headers: string): any {\n    let parsed = Object.create(null);\n    if (!headers) return parsed;\n    headers.split('\\r\\n').forEach(line => {\n        let [key, val] = line.split(':');\n        key = key.trim().toLowerCase();\n        if (!key) return;\n        if (val) val = val.trim();\n        parsed[key] = val;\n    })\n    return parsed;\n}","import { AxiosResponse, AxiosRequestConfig } from './../types';\n\nexport class AxiosError extends Error {\n    isAxiosError: boolean\n    config: AxiosRequestConfig\n    code?: string | null\n    request?: any\n    response?: AxiosResponse\n\n    constructor(\n        message: string,\n        config: AxiosRequestConfig,\n        code?: string | null,\n        request?: any,\n        response?: AxiosResponse\n    ) {\n        super(message);\n        this.config = config;\n        this.code = code;\n        this.request = request;\n        this.response = response;\n        this.isAxiosError = true;\n        Object.setPrototypeOf(this, AxiosError.prototype);\n    }\n}\n\nexport function createError(\n    message: string,\n    config: AxiosRequestConfig,\n    code?: string | null,\n    request?: any,\n    response?: AxiosResponse\n): AxiosError {\n    const error = new AxiosError(message, config, code, request, response);\n    return error;\n}","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types';\nimport { parseHeaders } from '../helpers/headers';\nimport { createError } from '../helpers/error';\n\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise {\n    return new Promise((resolve: any, reject: any) => {\n        const { data = null, url, method = 'get', headers, responseType, timeout } = config;\n        const request = new XMLHttpRequest();\n        // 响应值类型\n        if (responseType) {\n            request.responseType = responseType;\n        }\n        if (timeout) {\n            request.timeout = timeout;\n        }\n        request.open(method.toLocaleUpperCase(), url!, true);\n        // 监听状态变化\n        request.onreadystatechange = function handleLoad() {\n            if (request.readyState != 4) return;\n            const responseHeaders = parseHeaders(request.getAllResponseHeaders());\n            const responseData = responseType !== 'text' ? request.response : request.responseText;\n            const response: AxiosResponse = {\n                data: responseData,\n                status: request.status,\n                statusText: request.statusText,\n                headers: responseHeaders,\n                config,\n                request\n            }\n            if (request.status === 0) return;\n            handleResponse(response);\n        }\n        // 错误处理\n        request.onerror = function handleError() {\n            reject(createError(\"Network Error\", config, null, request));\n        }\n        // 超时处理\n        request.ontimeout = function handleTimeout() {\n            reject(createError(`Timeout of ${timeout} ms exceeded`, config, 'ECONNABORTED', request));\n        }\n\n        Object.keys(headers).forEach((name) => {\n            if (data === null && name.toLowerCase() == 'content-type') {\n                delete headers[name];\n            } else {\n                request.setRequestHeader(name, headers[name]);\n            }\n        })\n        request.send(data);\n\n        function handleResponse(response: AxiosResponse): void {\n            if (response.status >= 200 && response.status < 300) {\n                resolve(response);\n            } else {\n                reject(createError(`Request failed with status code ${response.status}`,\n                    config, null, request, response));\n            }\n        }\n    })\n\n}","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types';\nimport { buildURL } from '../helpers/url';\nimport { transfromRequest, transfromResponse } from '../helpers/data';\nimport { processHeaders } from '../helpers/headers'\nimport xhr from './xhr';\n\n\nexport default function dispatchRequest(config: AxiosRequestConfig): AxiosPromise {\n    processConfig(config);\n    return xhr(config).then((res) => {\n        return transformResponseData(res);\n    });\n}\n\nfunction processConfig(config: AxiosRequestConfig): void {\n    config.url = transformURL(config);\n    config.headers = transformRequestHeaders(config);\n    config.data = transformRequestData(config);\n}\n\nfunction transformURL(config: AxiosRequestConfig): string {\n    const { url, params } = config;\n    return buildURL(url!, params);\n}\n\nfunction transformRequestData(config: AxiosRequestConfig): any {\n    return transfromRequest(config.data);\n}\n\nfunction transformRequestHeaders(config: AxiosRequestConfig): any {\n    const { data, headers = {} } = config;\n    return processHeaders(headers, data);\n}\n\nfunction transformResponseData(res: AxiosResponse): AxiosResponse {\n    res.data = transfromResponse(res.data);\n    return res;\n}\n","import { RejectedFn, ResolvedFn } from \"../types\";\n\ninterface Interceptor<T> {\n    resolved: ResolvedFn<T>;\n    rejected?: RejectedFn<T>;\n}\n\nexport class InterceptorManagers<T> {\n    private interceptor: Array<Interceptor<T> | null>;\n    constructor() {\n        this.interceptor = [];\n    }\n\n    use(resolved: ResolvedFn<T>, rejected?: RejectedFn<T>): number {\n        this.interceptor.push({\n            resolved,\n            rejected,\n        })\n        return this.interceptor.length - 1;\n    }\n\n    eject(id: number): void {\n        if (this.interceptor[id]) {\n            this.interceptor[id] = null;\n        }\n    }\n\n    forEach(fn: (interceptor: Interceptor<T>) => void): void {\n        this.interceptor.forEach(interceptor => {\n            if (interceptor !== null) {\n                fn(interceptor);\n            }\n        })\n    }\n}","import { AxiosPromise, AxiosRequestConfig, AxiosResponse, Method, RejectedFn, ResolvedFn } from \"../types\";\nimport dispatchRequest from \"./disptchRequest\";\nimport { InterceptorManagers } from \"./Interceptor\";\n\n\ninterface Interceptor {\n    // 请求拦截器\n    request: InterceptorManagers<AxiosRequestConfig>;\n    // 响应拦截器\n    response: InterceptorManagers<AxiosResponse>;\n}\n\ninterface PromiseChain<T> {\n    resolved: ResolvedFn<T> | ((config: AxiosRequestConfig) => AxiosPromise),\n    rejected?: RejectedFn<T>\n}\n\nexport default class Axios {\n    // 拦截器\n    interceptors: Interceptor\n\n    constructor() {\n        this.interceptors = {\n            request: new InterceptorManagers<AxiosRequestConfig>(),\n            response: new InterceptorManagers<AxiosResponse>(),\n        }\n    }\n\n    request(url: any, config?: any): AxiosPromise {\n        if (typeof url === 'string') {\n            if (!config) config = {};\n            config.url = url;\n        } else {\n            config = url;\n        }\n        // 调用链\n        const chain: PromiseChain<any>[] = [{\n            resolved: dispatchRequest,\n            rejected: undefined\n        }]\n        this.interceptors.request.forEach(interceptor => {\n            chain.unshift(interceptor);\n        })\n        this.interceptors.response.forEach(interceptor => {\n            chain.push(interceptor);\n        })\n        let promise = Promise.resolve(config);\n        while (chain.length) {\n            const { resolved, rejected } = chain.shift()!;\n            promise = promise.then(resolved, rejected);\n        }\n        return promise;\n    }\n\n    get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('get', url, config);\n    }\n\n    delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('delete', url, config);\n    }\n\n    post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('post', url, data, config);\n    }\n\n    put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('put', url, data, config);\n    }\n\n    patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('patch', url, data, config);\n    }\n\n    _requestMethodWithoutData(method: Method, url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this.request(Object.assign(config || {}, {\n            url,\n            method,\n        }))\n    }\n\n    _requestMethodWithData(method: Method, url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this.request(Object.assign(config || {}, {\n            url,\n            method,\n            data,\n        }))\n    }\n}","\nimport Axios from \"./core/Axios\";\nimport { extend } from \"./helpers/util\";\nimport { AxiosInstance } from \"./types\";\n\n\nfunction createInstance() {\n    const context = new Axios();\n    // 这样instance就指向了request方法，且上下文指向context，所以可以直接以 instance(option) 方式调用 \n    // Axios.prototype.request 内对第一个参数的数据类型判断，使我们能够以 instance(url, option) 方式调用\n    const instance = Axios.prototype.request.bind(context);\n    extend(instance, context);\n    return instance as AxiosInstance;\n}\n\nconst axios = createInstance();\n\n\naxios.interceptor.request.use(config => {\n    console.log(config.url);\n    console.log(config.method);\n    return config;\n})\n\nexport default axios;\n\n"]}]}